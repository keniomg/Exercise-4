using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Net.Mime.MediaTypeNames;

namespace functionTask1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddDossierCommand = "1";
            const string WriteDossierCommand = "2";
            const string DeleteDossierCommand = "3";
            const string SearchWithSurnameCommand = "4";
            const string ExitCommand = "5";

            bool isWorking = true;
            string[] fullnameList = { "Баринов Виктор Петрович", "Лавров Максим Леонидович", "Гончарова Виктория Сергеевна",
                "Анисимов Константин Тимофеевич", "Анисимова Анастасия Степановна", "Семёнова Екатерина Викторовна" };
            string[] jobTitleList = { "Шеф-повар", "Повар", "Директор ресторана", "Бармен", "Официантка", "Повар" };

            while (isWorking)
            {
                Console.Clear();
                Console.WriteLine($"Вы можете выполнить следующие команды, введя соответствующее число:" +
                    $"\n\n{AddDossierCommand} - добавить досье\n{WriteDossierCommand} - вывести все досье\n{DeleteDossierCommand} - удалить досье\n{SearchWithSurnameCommand} - поиск по фамилии\n{ExitCommand} - выход");
                string userInput = Console.ReadLine();
                Console.Clear();

                switch (userInput)
                {
                    case AddDossierCommand:
                        AddDossier(ref fullnameList, ref jobTitleList);
                        break;

                    case WriteDossierCommand:
                        WriteDossier(ref fullnameList, ref jobTitleList);
                        break;

                    case DeleteDossierCommand:
                        DeleteDossier(ref fullnameList, ref jobTitleList);
                        break;

                    case SearchWithSurnameCommand:
                        SearchWithSurname(ref fullnameList, ref jobTitleList);
                        break;

                    case ExitCommand:
                        isWorking = false;
                        break;

                    default:
                        WriteError();
                        break;
                }
            }
        }

        static void ReadKeyForContinue()
        {
            Console.WriteLine("\nДля продолжения нажмите любую клавишу...\n");
            Console.ReadKey();
        }

        static string[] ExpandArray(string[] array, string text)
        {
            int tempArrayLength = array.Length + 1;
            string[] tempArray = new string[tempArrayLength];

            for (int i = 0; i < array.Length; i++)
            {
                tempArray[i] = array[i];
            }

            tempArray[tempArrayLength - 1] = text;
            array = tempArray;
            return array;
        }

        static void AddDossier(ref string[] fullnameList, ref string[] jobTitleList)
        {
            Console.WriteLine("Введите Ф.И.О нового работника:\n");
            string tempFullname = Console.ReadLine();
            Console.WriteLine("\nВведите должность нового работника:\n");
            string tempJobTitle = Console.ReadLine();
            Console.Clear();
            fullnameList = ExpandArray(fullnameList, tempFullname);
            jobTitleList = ExpandArray(jobTitleList, tempJobTitle);
            Console.WriteLine("Досье добавлено!");
            ReadKeyForContinue();
        }

        static void WriteDossier(ref string[] fullnameList, ref string[] jobTitleList)
        {
            for (int i = 0; i < fullnameList.Length; i++)
            {
                int order = i + 1;
                Console.WriteLine($"{order}-{fullnameList[i]}-{jobTitleList[i]}");
            }

            ReadKeyForContinue();
        }

        static void DecreaseArray(ref string[] array, int number)
        {
            int arrayIndex = number - 1;
            int tempArrayLength = array.Length - 1;
            string[] tempArray = new string[tempArrayLength];

            for (int i = arrayIndex; i < tempArrayLength; i++)
            {
                array[i] = array[i + 1];
            }

            for (int i = 0; i < tempArrayLength; i++)
            {
                tempArray[i] = array[i];
            }

            array = tempArray;
        }

        static void DeleteDossier(ref string[] fullnameList, ref string[] jobTitleList)
        {
            if (fullnameList.Length == 0)
            {
                Console.WriteLine("В базе нет ни одного досье.");
            }
            else
            {
                Console.WriteLine("Введите номер досье, которое вы хотите удалить:\n");
                int dossierNumber = Convert.ToInt32(Console.ReadLine());

                if (dossierNumber > fullnameList.Length)
                {
                    Console.WriteLine("\nНет досье с таким номером.");
                }
                else
                {
                    Console.Clear();
                    DecreaseArray(ref fullnameList, dossierNumber);
                    DecreaseArray(ref jobTitleList, dossierNumber);
                    Console.WriteLine("Досье удалено!");
                }
            }

            ReadKeyForContinue();
        }

        static void SearchWithSurname(ref string[] fullnameList, ref string[] jobTitleList)
        {
            Console.WriteLine("Введите фамилию искомого работника:\n");
            string searchedSurname = Console.ReadLine();
            Console.WriteLine("\nНайденные совпадения:");

            for (int i = 0; i < fullnameList.Length; i++)
            {
                if (fullnameList[i].StartsWith(searchedSurname, StringComparison.OrdinalIgnoreCase))
                {
                    int dossierNumber = i + 1;
                    Console.WriteLine($"\n{dossierNumber}-{fullnameList[i]}-{jobTitleList[i]}");
                }
            }

            ReadKeyForContinue();
        }

        static void WriteError()
        {
            Console.WriteLine("Введена неверная команда...");
            ReadKeyForContinue();
        }
    }
}
