using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace functionTask5
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = new int[15];
            SetRandomArrayElements(0, 10, numbers);
            WriteArray(numbers, "Изначальный массив:");
            Shuffle(ref numbers, 0, numbers.Length);
            WriteArray(numbers, "Смешанный массив:");
        }

        static void SetRandomArrayElements(int minValue, int maxValue, int[] array)
        {
            Random random = new Random();

            for (int i = 0; i < array.Length; i++)
            {
                array[i] = random.Next(minValue, maxValue);
            }
        }

        static void WriteArray(int[] array, string text)
        {
            Console.WriteLine($"{text}\n");

            for (int i = 0; i < array.Length; i++)
            {
                Console.Write(array[i] + " ");
            }

            Console.WriteLine("\n");
        }

        static void Shuffle(ref int[] array, int minIndexValue, int maxIndexValue)
        {
            Random random = new Random();
            int minRandomIndexValue = minIndexValue;
            int maxRandomIndexValue = maxIndexValue;
            int[] skipIndexes = new int[array.Length];
            int[] tempArray = new int[array.Length];

            for (int i = 0; i < skipIndexes.Length; i++)
            {
                skipIndexes[i] = -1;
            }

            for (int i = 0; i < array.Length;)
            {
                int mixedIndex = random.Next(minRandomIndexValue, maxRandomIndexValue);

                if (skipIndexes.Contains<int>(mixedIndex) == false)
                {
                    skipIndexes[i] = mixedIndex;
                    tempArray[i] = array[mixedIndex];
                    i++;
                }
            }

            array = tempArray;
        }
    }
}
